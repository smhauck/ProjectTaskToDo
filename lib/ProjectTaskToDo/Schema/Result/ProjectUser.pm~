package ProjectTaskToDo::Schema::Result::ProjectUser;

# Created by DBIx::Class::Schema::Loader
# DO NOT MODIFY THE FIRST PART OF THIS FILE

use strict;
use warnings;

use Moose;
use MooseX::NonMoose;
use namespace::autoclean;
extends 'DBIx::Class::Core';

__PACKAGE__->load_components("InflateColumn::DateTime", "PK::Auto");

=head1 NAME

ProjectTaskToDo::Schema::Result::ProjectUser

=cut

__PACKAGE__->table("project_user");

=head1 ACCESSORS

=head2 project_user_id

  data_type: 'bigint'
  extra: {unsigned => 1}
  is_auto_increment: 1
  is_nullable: 0

=head2 project_user_project_id

  data_type: 'mediumint'
  is_nullable: 0

=head2 project_user_user_id

  data_type: 'bigint'
  extra: {unsigned => 1}
  is_nullable: 0

=head2 project_user_role_id

  data_type: 'mediumint'
  is_nullable: 0

=head2 project_user_last_modified

  data_type: 'timestamp'
  default_value: current_timestamp
  is_nullable: 0

=cut

__PACKAGE__->add_columns(
  "project_user_id",
  {
    data_type => "bigint",
    extra => { unsigned => 1 },
    is_auto_increment => 1,
    is_nullable => 0,
  },
  "project_user_project_id",
  { data_type => "mediumint", is_nullable => 0 },
  "project_user_user_id",
  { data_type => "bigint", extra => { unsigned => 1 }, is_nullable => 0 },
  "project_user_role_id",
  { data_type => "mediumint", is_nullable => 0 },
  "project_user_last_modified",
  {
    data_type     => "timestamp",
    default_value => \"current_timestamp",
    is_nullable   => 0,
  },
);
__PACKAGE__->set_primary_key("project_user_id");
__PACKAGE__->add_unique_constraint(
  "project_user_role",
  [
    "project_user_project_id",
    "project_user_user_id",
    "project_user_role_id",
  ],
);


# Created by DBIx::Class::Schema::Loader v0.07002 @ 2013-09-12 15:17:59
# DO NOT MODIFY THIS OR ANYTHING ABOVE! md5sum:MZRonyRA7YCRsFg2WYgddA



__PACKAGE__->many_to_many('users', 'project_users', 'user');
__PACKAGE__->belongs_to('user' => 'ProjectTaskToDo::Schema::Result::User', 'project_user_user_id');
__PACKAGE__->belongs_to('project' => 'ProjectTaskToDo::Schema::Result::Project', 'project_user_project_id');

__PACKAGE__->many_to_many('roles', 'project_users', 'role');
__PACKAGE__->belongs_to('role' => 'ProjectTaskToDo::Schema::Result::Role', 'project_user_role_id');



__PACKAGE__->meta->make_immutable;
1;
